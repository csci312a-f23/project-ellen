/* eslint-disable react-hooks/exhaustive-deps */
/* eslint-disable no-console */
import Head from "next/head";
import Image from "next/image"; // Import the Image component
import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import styles from "../../../styles/rooms.module.css";
import battell from "../../../../public/images/battell.png";

export default function Rooms() {
  const [number, setNum] = useState(null);
  const [dimensions, setDimensions] = useState("");
  const [reviews, setReviews] = useState([]);

  const router = useRouter();
  const { id } = router.query;
  console.log(router.query);
  console.log(id);

  const normID = +id;

  function setRoom(room) {
    setNum(room.id);
    setDimensions(room.dimensions);
    setReviews(room.reviews);
  }

  const getRoom = async () => {
    try {
      const response = await fetch(`/api/rooms/${normID}`);
      if (response.ok) {
        const data = await response.json();
        setRoom(data);
      }
    } catch (error) {
      console.error("Error fetching room data:", error);
    }
  };

  useEffect(() => {
    getRoom();
  }, []);

  // add unfilled stars to reviews
  return (
    <>
      <Head>
        <title>MiddHousing</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
        />
      </Head>
      <main className={styles.body}>
        <div className={styles.imageContainer}>
          <Image
            src={battell} // imported up to
            alt="Room Photo"
            width={1008}
            height={672}
          />
        </div>
        <div className={styles.h1}>{number}</div>
        <div className={styles.h2}> Room : {normID} </div>
        <div className={styles.h2}> Dimensions : {dimensions} sq ft </div>
        {reviews &&
          reviews.map((review) => (
            <>
              <div className={styles.h2}> Rating : {review.rating} </div>
              <div className="rating-box">
                <div className={styles.starscontainer}>
                  {Array.from({ length: review.rating }, (_, i) => (
                    <i key={i} className="fas fa-star is-active" />
                  ))}

                  {Array.from({ length: 5 - review.rating }, (_, i) => (
                    <i key={i} className="far fa-star unfilled-star" />
                  ))}
                </div>
              </div>
              <div className={styles.h2}> Reviews : {review.review} </div>
            </>
          ))}
      </main>
    </>
  );
}
