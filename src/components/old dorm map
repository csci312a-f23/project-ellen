import React, { useState } from "react";
import PropTypes from "prop-types";
import styles from "../styles/DormMaps.module.css";

function DormMaps({ selectedDorm }) {
  const dormImages = {
    Battell: {
      firstFloor: "/images/Battell1F.png",
      secondFloor: "/images/Battell2F.png",
    },
    Stewart: {
      // firstFloor: "/images/StewartF1.png",
      // secondFloor: "/images/StewartF2.png",
      // thirdFloor: "/images/StewartF3.png",
      // fourthFloor: "/images/StewartF4.png",
      // fifthFloor: "/images/StewartF5.png",
    },
    Hepburn: {
      // firstFloor: "/images/HepburnF1.png",
      // secondFloor: "/images/HepburnF2.png",
      // thirdFloor: "/images/HepburnF3.png",
      // fourthFloor: "/images/HepburnF4.png",
      // fifthFloor: "/images/HepburnF5.png",
    },
    Allen: {
      // basement: "/images/AllenB.png",
      // firstFloor: "/images/AllenF1.png",
      // secondFloor: "/images/AllenF2.png",
      // thirdFloor: "/images/AllenF3.png",
    },
  };

  // Define clickable areas for each dorm and floor
  const clickableAreas = {
    // Battell: {
    //   firstFloor: [
    //     { id: "Area1", x: 100, y: 150 },
    //     // ... add more areas
    //   ],
    //   secondFloor: [
    //     { id: "Area3", x: 300, y: 350 },
    // Define areas for other dorms as needed
    Battell: {
      firstFloor: [
        { id: "Room 100", x: 200, y: 400 },
        { id: "Room 101", x: 820, y: 748 },
        { id: "Room 102", x: 848, y: 125 },
        { id: "Room 103", x: 875, y: 748 },
        { id: "Room 104", x: 957, y: 748 },
        { id: "Room 105", x: 984, y: 748 },
        { id: "Room 106", x: 150, y: 150 },
        { id: "Room 107", x: 100, y: 150 },
        { id: "Room 108", x: 100, y: 150 },
        { id: "Room 109", x: 100, y: 150 },
      ],
      secondFloor: [
        { id: "2Area1", x: 150, y: 200, name: "Room 21" },
        { id: "2Area2", x: 225, y: 250 },
      ],
    },
    // ... add more areas
  };

  const selectedDormImages = dormImages[selectedDorm] || {};

  // const areas = clickableAreas[selectedDorm] || [];

  const floors = Object.keys(selectedDormImages);
  const [selectedFloor, setSelectedFloor] = useState("firstFloor"); // Initial floor

  const areas = clickableAreas[selectedDorm]?.[selectedFloor] || [];

  const [hoveredArea, setHoveredArea] = useState(null);

  // const handleHoverArea = (area) => {
  //   setHoveredArea(area); // area.id?
  //   console.log(area);
  //   console.log(hoveredArea);
  // };

  const handleClickArea = (area) => {
    console.log(`Clicked on ${area.id} in ${selectedDorm}`);
  };

  return (
    <div>
      <h1 className={styles.dormTitle}>{selectedDorm}</h1>
      <h4 className={styles.floorTitle}>
        {selectedFloor
          .replace(/([A-Z])/g, " $1")
          .trim()
          .replace(/^./, (str) => str.toUpperCase())}
      </h4>
      <div className={styles.floorButtons}>
        {floors.map((floor) => (
          <button
            type="button"
            key={floor}
            onClick={() => setSelectedFloor(floor)}
            className={selectedFloor === floor ? styles.selectedFloor : ""}
          >
            {floor}
          </button>
        ))}
      </div>
      <div className={styles.imageContainer}>
        {areas.map((area) => (
          <div
            key={area.id}
            className={`${styles.clickableArea} ${
              hoveredArea === area.id ? styles.hoveredArea : ""
            }`}
            style={{
              top: `${(area.y / 500) * 100}%`,
              left: `${(area.x / 700) * 100}%`,
            }}
            onMouseEnter={() => setHoveredArea(area.id)}
            onMouseLeave={() => setHoveredArea(null)}
            onClick={() => handleClickArea(area)}
          >
            {hoveredArea === area.id && (
              <div className={styles.hoveredText}>{area.id}</div>
            )}
          </div>
        ))}
        <img
          className={styles.dormImage}
          height={500}
          width={700}
          src={selectedDormImages[selectedFloor]}
          alt={`${selectedFloor} image`}
        />
      </div>
    </div>
  );
}

DormMaps.propTypes = {
  selectedDorm: PropTypes.string.isRequired,
};

export default DormMaps;
